export const sheet = [
    { id: 1, topic: "Array", name: "Largest Element in an Array", url: "", code: "", status: "completed" },
    { id: 2, topic: "Array", name: "Second Largest Element in an Array without sorting", url: "", code: "", status: "completed" },
    { id: 3, topic: "Array", name: "Check if the array is sorted", url: "", code: "", status: "completed" },
    { id: 4, topic: "Array", name: "Left Rotate an array by one place", url: "", code: "", status: "completed" },
    { id: 5, topic: "Array", name: "Remove duplicates from Sorted array", url: "", code: "", status: "completed" },
    { id: 6, topic: "Array", name: "Move Zeros to end", url: "", code: "", status: "completed" },
    { id: 7, topic: "Array", name: "Left rotate an array by D places", url: "", code: "", status: "completed" },
    { id: 8, topic: "Array", name: "Linear Search", url: "", code: "", status: "completed" },
    { id: 9, topic: "Array", name: "Find missing number in an array", url: "", code: "", status: "completed" },
    { id: 10, topic: "Array", name: "Maximum Consecutive Ones", url: "", code: "", status: "completed" },
    { id: 11, topic: "Array", name: "Find the number that appears once, and other numbers twice.", url: "", code: "", status: "completed" },
    { id: 12, topic: "Array", name: "Longest subarray with given sum K(positives", url: "", code: "", status: "completed" },
    { id: 13, topic: "Array", name: "2Sum Problem", url: "", code: "", status: "completed" },
    { id: 14, topic: "Array", name: "Sort an array of 0's 1's and 2's", url: "", code: "", status: "completed" },
    { id: 15, topic: "Array", name: "Kadane's Algorithm, maximum subarray sum", url: "", code: "", status: "completed" },
    { id: 16, topic: "Array", name: "Stock Buy and Sell", url: "", code: "", status: "completed" },
    { id: 17, topic: "Array", name: "Rearrange the array in alternating positive and negative items", url: "", code: "", status: "completed" },
    { id: 18, topic: "Array", name: "Leaders in an Array problem", url: "", code: "", status: "completed" },
    { id: 19, topic: "Array", name: "Longest Consecutive Sequence in an Array", url: "", code: "", status: "completed" },
    { id: 20, topic: "Matrix", name: "Set Matrix Zeros", url: "", code: "", status: "completed" },
    { id: 21, topic: "Array", name: "Merge two sorted arrays without extra space", url: "", code: "", status: "completed" },
    { id: 22, topic: "Array", name: "Find the repeating and missing number", url: "", code: "", status: "completed" },
    { id: 23, topic: "Linked List", name: "Middle of a LinkedList [TortoiseHare Method]", url: "", code: "", status: "completed" },
    { id: 24, topic: "Linked List", name: "Reverse a LinkedList [Iterative]", url: "", code: "", status: "completed" },
    { id: 25, topic: "Linked List", name: "Detect a loop in LL", url: "", code: "", status: "completed" },
    { id: 26, topic: "Linked List", name: "Find the starting point in LL", url: "", code: "", status: "completed" },
    { id: 27, topic: "Linked List", name: "Length of Loop in LL", url: "", code: "", status: "completed" },
    { id: 28, topic: "Linked List", name: "Segrregate odd and even nodes in LL", url: "", code: "", status: "completed" },
    { id: 29, topic: "Linked List", name: "Remove Nth node from the back of the LL", url: "", code: "", status: "completed" },
    { id: 30, topic: "Linked List", name: "Delete the middle node of LL", url: "", code: "", status: "completed" },
    { id: 31, topic: "Linked List", name: "Find the intersection point of Y LL", url: "", code: "", status: "completed" },
    { id: 32, topic: "Recursion/DP", name: "Check if there exists a subsequence with sum K", url: "", code: "", status: "completed" },
    { id: 33, topic: "Recursion/Backtracking", name: "Combination Sum", url: "", code: "", status: "completed" },
    { id: 34, topic: "Recursion/Backtracking", name: "Combination Sum-II", url: "", code: "", status: "completed" },
    { id: 35, topic: "Recursion/Backtracking", name: "Combination Sum - III", url: "", code: "", status: "completed" },
    { id: 36, topic: "Stack", name: "Check for balanced paranthesis", url: "", code: "", status: "completed" }
  ];
  